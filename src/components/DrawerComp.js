import * as React from "react";
import List from "@mui/material/List";
import Divider from "@mui/material/Divider";
import IconButton from "@mui/material/IconButton";
import ChevronLeftIcon from "@mui/icons-material/ChevronLeft";
import ChevronRightIcon from "@mui/icons-material/ChevronRight";
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import ListItemText from "@mui/material/ListItemText";
import MuiDrawer from "@mui/material/Drawer";
import { styled, useTheme } from "@mui/material/styles";
import { useNavigate } from "react-router-dom";
const drawerWidth = 240;

const openedMixin = (theme) => ({
  width: drawerWidth,
  transition: theme.transitions.create("width", {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.enteringScreen,
  }),
  overflowX: "hidden",
});

const closedMixin = (theme) => ({
  transition: theme.transitions.create("width", {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen,
  }),
  overflowX: "hidden",
  width: `calc(${theme.spacing(7)} + 1px)`,
  [theme.breakpoints.up("sm")]: {
    width: `calc(${theme.spacing(8)} + 1px)`,
  },
});

const Drawer = styled(MuiDrawer, {
  shouldForwardProp: (prop) => prop !== "open",
})(({ theme, open }) => ({
  width: drawerWidth,
  flexShrink: 0,
  whiteSpace: "nowrap",
  boxSizing: "border-box",
  ...(open && {
    ...openedMixin(theme),
    "& .MuiDrawer-paper": openedMixin(theme),
  }),
  ...(!open && {
    ...closedMixin(theme),
    "& .MuiDrawer-paper": closedMixin(theme),
  }),
}));

const DrawerHeader = styled("div")(({ theme }) => ({
  display: "flex",
  alignItems: "center",
  justifyContent: "flex-end",
  padding: theme.spacing(0, 1),
  // necessary for content to be below app bar
  ...theme.mixins.toolbar,
}));

const ClassIcon = () => {
  return (
    <div class="icons">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="17"
        viewBox="0 0 20 17"
        fill="none"
        class="injected-svg"
        data-src="/Icons/Sidebar_Icons/class.svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <path
          d="M17.745 0C18.3417 0 18.914 0.23705 19.336 0.65901C19.7579 1.08097 19.995 1.65326 19.995 2.25V13.755C19.995 14.3517 19.7579 14.924 19.336 15.346C18.914 15.7679 18.3417 16.005 17.745 16.005H2.25C1.95453 16.005 1.66194 15.9468 1.38896 15.8337C1.11598 15.7207 0.86794 15.5549 0.65901 15.346C0.45008 15.1371 0.28434 14.889 0.17127 14.616C0.0581999 14.3431 0 14.0505 0 13.755V2.25C0 1.65326 0.23705 1.08097 0.65901 0.65901C1.08097 0.23705 1.65326 0 2.25 0H17.745ZM17.745 1.5H2.25C2.05109 1.5 1.86032 1.57902 1.71967 1.71967C1.57902 1.86032 1.5 2.05109 1.5 2.25V13.755C1.5 14.169 1.836 14.505 2.25 14.505L4.999 14.504L5 11.75C5.00002 11.3108 5.16517 10.8877 5.46268 10.5646C5.76019 10.2415 6.1683 10.0421 6.606 10.006L6.75 10H13.245C13.6843 10 14.1076 10.1653 14.4307 10.463C14.7538 10.7608 14.9531 11.1691 14.989 11.607L14.995 11.75L14.994 14.504H17.745C17.9439 14.504 18.1347 14.425 18.2753 14.2843C18.416 14.1437 18.495 13.9529 18.495 13.754V2.25C18.495 2.05109 18.416 1.86032 18.2753 1.71967C18.1347 1.57902 17.9439 1.5 17.745 1.5ZM10 3C10.7956 3 11.5587 3.31607 12.1213 3.87868C12.6839 4.44129 13 5.20435 13 6C13 6.7956 12.6839 7.5587 12.1213 8.1213C11.5587 8.6839 10.7956 9 10 9C9.2044 9 8.4413 8.6839 7.87868 8.1213C7.31607 7.5587 7 6.7956 7 6C7 5.20435 7.31607 4.44129 7.87868 3.87868C8.4413 3.31607 9.2044 3 10 3Z"
          fill="#93A4B7"
        ></path>
      </svg>
    </div>
  );
};

const FeedBackIcon = () => {
  return (
    <div class="icons">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        class="injected-svg"
        data-src="/Icons/Sidebar_Icons/queries.svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <path
          d="M6.5 12C7.95869 12 9.35764 12.5795 10.3891 13.6109C11.4205 14.6424 12 16.0413 12 17.5C12 18.9587 11.4205 20.3576 10.3891 21.3891C9.35764 22.4205 7.95869 23 6.5 23C5.04131 23 3.64236 22.4205 2.61091 21.3891C1.57946 20.3576 1 18.9587 1 17.5C1 16.0413 1.57946 14.6424 2.61091 13.6109C3.64236 12.5795 5.04131 12 6.5 12V12ZM16.749 2C17.3457 2 17.918 2.23705 18.34 2.65901C18.7619 3.08097 18.999 3.65326 18.999 4.25V19.75C18.999 20.3467 18.7619 20.919 18.34 21.341C17.918 21.7629 17.3457 22 16.749 22H11.189C12.2237 20.9226 12.8557 19.5217 12.9788 18.033C13.1018 16.5443 12.7083 15.0587 11.8645 13.826C11.0207 12.5934 9.77814 11.689 8.3458 11.265C6.91346 10.841 5.37879 10.9233 4 11.498V4.251C3.99987 3.95536 4.058 3.66259 4.17108 3.38942C4.28416 3.11626 4.44996 2.86806 4.65901 2.65901C4.86806 2.44996 5.11626 2.28416 5.38942 2.17108C5.66259 2.058 5.95536 1.99987 6.251 2H16.75H16.749ZM6.5 19.88C6.41589 19.8766 6.33196 19.8903 6.25326 19.9202C6.17455 19.95 6.10269 19.9955 6.04199 20.0538C5.98129 20.1121 5.93299 20.1821 5.9 20.2596C5.86701 20.337 5.85001 20.4203 5.85001 20.5045C5.85001 20.5887 5.86701 20.672 5.9 20.7494C5.93299 20.8269 5.98129 20.8969 6.04199 20.9552C6.10269 21.0135 6.17455 21.059 6.25326 21.0888C6.33196 21.1187 6.41589 21.1324 6.5 21.129C6.6613 21.1225 6.81385 21.0539 6.9257 20.9375C7.03754 20.8211 7.10001 20.6659 7.10001 20.5045C7.10001 20.3431 7.03754 20.1879 6.9257 20.0715C6.81385 19.9551 6.6613 19.8865 6.5 19.88V19.88ZM6.5 14.003C5.452 14.003 4.636 14.82 4.647 15.957C4.64833 16.0896 4.70228 16.2163 4.79698 16.3091C4.89169 16.4019 5.01939 16.4533 5.152 16.452C5.28461 16.4507 5.41126 16.3967 5.50409 16.302C5.59692 16.2073 5.64833 16.0796 5.647 15.947C5.641 15.369 6.007 15.003 6.5 15.003C6.972 15.003 7.353 15.395 7.353 15.953C7.353 16.177 7.278 16.343 7.036 16.63L6.936 16.743L6.671 17.033C6.187 17.575 6 17.925 6 18.501C6 18.6336 6.05268 18.7608 6.14645 18.8546C6.24021 18.9483 6.36739 19.001 6.5 19.001C6.63261 19.001 6.75979 18.9483 6.85355 18.8546C6.94732 18.7608 7 18.6336 7 18.501C7 18.268 7.076 18.098 7.324 17.806L7.424 17.691L7.69 17.401C8.168 16.866 8.353 16.519 8.353 15.953C8.353 14.849 7.531 14.003 6.5 14.003ZM20.75 15.002C20.9312 15.002 21.1063 15.0676 21.2429 15.1868C21.3795 15.3059 21.4684 15.4704 21.493 15.65L21.5 15.752V17.25C21.5 17.4312 21.4344 17.6063 21.3152 17.7429C21.1961 17.8795 21.0316 17.9684 20.852 17.993L20.75 18H20V15.002H20.75V15.002ZM20.75 11.002C20.9312 11.002 21.1063 11.0676 21.2429 11.1868C21.3795 11.3059 21.4684 11.4704 21.493 11.65L21.5 11.752V13.25C21.5 13.4312 21.4344 13.6063 21.3152 13.7429C21.1961 13.8795 21.0316 13.9684 20.852 13.993L20.75 14H20V11.002H20.75V11.002ZM20.75 7.002C20.9312 7.00201 21.1063 7.06764 21.2429 7.18677C21.3795 7.30589 21.4684 7.47045 21.493 7.65L21.5 7.752V9.25C21.5 9.43124 21.4344 9.60634 21.3152 9.74293C21.1961 9.87952 21.0316 9.96835 20.852 9.993L20.75 10H20V7.002H20.75V7.002ZM14.748 5.497H8.252C8.07076 5.49701 7.89566 5.56264 7.75907 5.68177C7.62248 5.80089 7.53365 5.96545 7.509 6.145L7.502 6.247V7.751C7.502 8.131 7.785 8.444 8.151 8.494L8.252 8.501H14.748C14.9292 8.50099 15.1043 8.43536 15.2409 8.31623C15.3775 8.19711 15.4664 8.03255 15.491 7.853L15.498 7.751V6.247C15.498 6.04809 15.419 5.85732 15.2783 5.71667C15.1377 5.57602 14.9469 5.497 14.748 5.497V5.497Z"
          fill="#7E8E9F"
        ></path>
      </svg>
    </div>
  );
};

const SyllabusIcon = () => {
  return (
    <div class="icons">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        class="injected-svg"
        data-src="/Icons/Sidebar_Icons/interviewTasks.svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <path
          d="M5.25 3C4.65326 3 4.08097 3.23705 3.65901 3.65901C3.23705 4.08097 3 4.65326 3 5.25V18.75C3 19.3467 3.23705 19.919 3.65901 20.341C4.08097 20.7629 4.65326 21 5.25 21H18.75C19.3467 21 19.919 20.7629 20.341 20.341C20.7629 19.919 21 19.3467 21 18.75V5.25C21 4.65326 20.7629 4.08097 20.341 3.65901C19.919 3.23705 19.3467 3 18.75 3H5.25ZM10.78 8.78L8.78 10.78C8.63937 10.9205 8.44875 10.9993 8.25 10.9993C8.05125 10.9993 7.86063 10.9205 7.72 10.78L6.72 9.78C6.58752 9.63782 6.5154 9.44978 6.51883 9.25548C6.52225 9.06118 6.60097 8.87579 6.73838 8.73838C6.87579 8.60097 7.06118 8.52225 7.25548 8.51882C7.44978 8.5154 7.63783 8.58752 7.78 8.72L8.25 9.19L9.72 7.72C9.78866 7.64631 9.87146 7.58721 9.96346 7.54622C10.0555 7.50523 10.1548 7.48319 10.2555 7.48141C10.3562 7.47963 10.4562 7.49816 10.5496 7.53588C10.643 7.5736 10.7278 7.62974 10.799 7.70096C10.8703 7.77218 10.9264 7.85701 10.9641 7.9504C11.0018 8.04379 11.0204 8.14382 11.0186 8.24452C11.0168 8.34522 10.9948 8.44454 10.9538 8.53654C10.9128 8.62854 10.8537 8.71134 10.78 8.78V8.78ZM16.75 8.5C16.9489 8.5 17.1397 8.57902 17.2803 8.71967C17.421 8.86032 17.5 9.05109 17.5 9.25C17.5 9.44891 17.421 9.63968 17.2803 9.78033C17.1397 9.92098 16.9489 10 16.75 10H13.25C13.0511 10 12.8603 9.92098 12.7197 9.78033C12.579 9.63968 12.5 9.44891 12.5 9.25C12.5 9.05109 12.579 8.86032 12.7197 8.71967C12.8603 8.57902 13.0511 8.5 13.25 8.5H16.75ZM12.5 14.75C12.5 14.5511 12.579 14.3603 12.7197 14.2197C12.8603 14.079 13.0511 14 13.25 14H16.75C16.9489 14 17.1397 14.079 17.2803 14.2197C17.421 14.3603 17.5 14.5511 17.5 14.75C17.5 14.9489 17.421 15.1397 17.2803 15.2803C17.1397 15.421 16.9489 15.5 16.75 15.5H13.25C13.0511 15.5 12.8603 15.421 12.7197 15.2803C12.579 15.1397 12.5 14.9489 12.5 14.75V14.75ZM10.78 13.22C10.9205 13.3606 10.9993 13.5512 10.9993 13.75C10.9993 13.9488 10.9205 14.1394 10.78 14.28L8.78 16.28C8.63937 16.4205 8.44875 16.4993 8.25 16.4993C8.05125 16.4993 7.86063 16.4205 7.72 16.28L6.72 15.28C6.64631 15.2113 6.58721 15.1285 6.54622 15.0365C6.50523 14.9445 6.48319 14.8452 6.48141 14.7445C6.47963 14.6438 6.49816 14.5438 6.53588 14.4504C6.5736 14.357 6.62974 14.2722 6.70096 14.201C6.77218 14.1297 6.85701 14.0736 6.9504 14.0359C7.04379 13.9982 7.14382 13.9796 7.24452 13.9814C7.34523 13.9832 7.44454 14.0052 7.53654 14.0462C7.62854 14.0872 7.71134 14.1463 7.78 14.22L8.25 14.69L9.72 13.22C9.86063 13.0795 10.0512 13.0007 10.25 13.0007C10.4488 13.0007 10.6394 13.0795 10.78 13.22V13.22Z"
          fill="#7E8E9F"
        ></path>
      </svg>
    </div>
  );
};

const CertificateIcon = () => {
  return (
    <div class="icons">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        class="icon injected-svg"
        data-src="/Icons/Sidebar_Icons/certificate.svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <path
          d="M17.75 3C18.612 3 19.4386 3.34241 20.0481 3.9519C20.6576 4.5614 21 5.38805 21 6.25V17.75C21 18.612 20.6576 19.4386 20.0481 20.0481C19.4386 20.6576 18.612 21 17.75 21H6.25C5.38805 21 4.5614 20.6576 3.9519 20.0481C3.34241 19.4386 3 18.612 3 17.75V9.372C3.33001 9.48837 3.68262 9.52617 4.0298 9.48239C4.37697 9.4386 4.70916 9.31444 4.99994 9.11978C5.29073 8.92511 5.5321 8.66531 5.70488 8.36101C5.87765 8.05671 5.97707 7.71631 5.99524 7.36685C6.0134 7.01739 5.9498 6.66851 5.8095 6.34794C5.6692 6.02737 5.45606 5.74395 5.18702 5.52018C4.91798 5.29642 4.60046 5.1385 4.25969 5.05896C3.91892 4.97942 3.5643 4.98046 3.224 5.062C3.463 4.45418 3.87947 3.9324 4.4192 3.56462C4.95892 3.19684 5.59688 3.00009 6.25 3H17.75ZM13.246 13.003H8.748L8.646 13.01C8.46649 13.0347 8.30199 13.1236 8.18291 13.2601C8.06383 13.3967 7.99823 13.5718 7.99823 13.753C7.99823 13.9342 8.06383 14.1093 8.18291 14.2459C8.30199 14.3824 8.46649 14.4713 8.646 14.496L8.748 14.503H13.246L13.348 14.496C13.5362 14.4701 13.7076 14.3737 13.8276 14.2263C13.9475 14.0789 14.007 13.8915 13.994 13.7019C13.9811 13.5123 13.8966 13.3347 13.7578 13.205C13.6189 13.0752 13.436 13.0031 13.246 13.003V13.003ZM15.252 9.496H8.748L8.646 9.503C8.46649 9.5277 8.30199 9.61655 8.18291 9.75314C8.06383 9.88972 7.99823 10.0648 7.99823 10.246C7.99823 10.4272 8.06383 10.6023 8.18291 10.7389C8.30199 10.8754 8.46649 10.9643 8.646 10.989L8.748 10.996H15.252L15.354 10.989C15.5423 10.9631 15.7137 10.8667 15.8336 10.7193C15.9535 10.5719 16.013 10.3845 16 10.1949C15.9871 10.0053 15.9026 9.8277 15.7638 9.69797C15.6249 9.56824 15.442 9.49606 15.252 9.496V9.496ZM3.75 6C4.08152 6 4.39946 6.1317 4.63388 6.36612C4.8683 6.60054 5 6.91848 5 7.25C5 7.58152 4.8683 7.89946 4.63388 8.13388C4.39946 8.3683 4.08152 8.5 3.75 8.5C3.41848 8.5 3.10054 8.3683 2.86612 8.13388C2.6317 7.89946 2.5 7.58152 2.5 7.25C2.5 6.91848 2.6317 6.60054 2.86612 6.36612C3.10054 6.1317 3.41848 6 3.75 6V6Z"
          fill="#7E8E9F"
        ></path>
      </svg>
    </div>
  );
};

export function DrawerComp() {
  const theme = useTheme();
  const [open, setOpen] = React.useState(false);

  const navigate = useNavigate();
  const handleDrawerOpen = () => {
    setOpen(true);
  };

  const handleDrawerClose = () => {
    setOpen(false);
  };

  return (
    <Drawer
      variant="permanent"
      open={open}
      onMouseOver={handleDrawerOpen}
      onMouseLeave={handleDrawerClose}
    >
      <DrawerHeader>
        <IconButton onClick={handleDrawerClose}>
          {theme.direction === "rtl" ? (
            <ChevronRightIcon />
          ) : (
            <span>
              <p>
                Student
                <ChevronLeftIcon />
              </p>
            </span>
          )}
        </IconButton>
      </DrawerHeader>
      <Divider />
      <List>
        {["Class", "Feedback", "Syllabus", "Certificate"].map((text, index) => (
          <ListItem key={text} disablePadding sx={{ display: "block" }}>
            <ListItemButton
              sx={{
                minHeight: 48,
                justifyContent: open ? "initial" : "center",
                px: 2.5,
              }}
              onClick={() => navigate(`/${text}`)}
            >
              <ListItemIcon
                sx={{
                  minWidth: 0,
                  mr: open ? 3 : "auto",
                  justifyContent: "center",
                }}
              >
                {index === 0 ? <ClassIcon /> : null}
                {index === 1 ? <FeedBackIcon /> : null}
                {index === 2 ? <SyllabusIcon /> : null}
                {index === 3 ? <CertificateIcon /> : null}
              </ListItemIcon>
              <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />
            </ListItemButton>
          </ListItem>
        ))}
      </List>
      <Divider />
    </Drawer>
  );
}
